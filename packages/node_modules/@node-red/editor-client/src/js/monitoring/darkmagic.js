RED.monitoring = (function () {
    var data = {};

    function darkmagic() {
        RED.nodes.eachNode(function (node) {
            data[node.id] = {values: [], type: ""};

            var nodeElement = document.getElementById(node.id);
            var g = nodeElement.childNodes[1];
            var foreign = document.createElementNS('http://www.w3.org/2000/svg', "foreignObject");
            foreign.setAttribute('width', nodeElement.childNodes[0].getAttribute('width'));
            foreign.setAttribute('height', 170);
            foreign.setAttribute('x', 0);
            foreign.setAttribute('y', 30);

            var iDiv = document.createElement('div');
            iDiv.setAttribute('style', "border:1px green solid;");
            iDiv.innerHTML = '<div> Im a div inside a SVG.' +
                '<img src="https://media.makeameme.org/created/dark-magics-going.jpg" alt="Italian Trulli">' +
                '</div>';

            foreign.appendChild(iDiv);
            g.appendChild(foreign);
            
            RED.comms.subscribe("monitoring/" + node.id, function (topic, event) {
                var value = event.value.payload;
                if(!data[node.id].type) data[node.id].type = typeof(value)
                var timestamp = new Date();
                iDiv.innerHTML = '<div>' +
                    '<span>Value: ' + value + '</span><br>' +
                    '<span>Time: ' + timestamp.toLocaleString() + '</span><br>' +
                    '</div>';

                data[node.id].values.push({x:timestamp.toLocaleTimeString(), y:value});

                if(typeof(value)== "number") {
                    iDiv.innerHTML +=  '<canvas id="chart-'+ node.id +'" width="' + nodeElement.childNodes[0].getAttribute('width') +'" height="130"></canvas>';

                    var ctx = document.getElementById('chart-'+node.id).getContext('2d');

                    new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: data[node.id].values.map(value => value.x),
                            datasets: [{
                                label: 'Value',
                                backgroundColor: 'rgb(255, 99, 132)',
                                borderColor: 'rgb(255, 99, 132)',
                                data: data[node.id].values.map(value => value.y)
                            }]
                        },
                        options: {
                            legend: {
                                display: false,
                            }
                        }
                    
                    });
                    
                }
            });
        });
    }

    return {
        darkmagic,
        data
    }
})();